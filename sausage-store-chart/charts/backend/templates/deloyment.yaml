---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: "{{ .Chart.Name }}"
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.environment }}"
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  replicas: {{ .Values.replicas }} 
  strategy:
    type: {{ .Values.strategy.type }}
    rollingUpdate:
      # всегда был 1 работающий Pod, а количество Pod, превышающих максимальное, было не более 20%
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: backend
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: backend-envs
            # - secretRef:
            #     name: backend-secrets
          ports:
            - name: backend
              containerPort: {{ .Values.service.targetPort }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
      imagePullSecrets:
        - name: docker-config-secret


