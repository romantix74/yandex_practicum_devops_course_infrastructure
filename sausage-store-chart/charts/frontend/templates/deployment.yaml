---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-{{ .Release.Name }}
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: "{{ .Chart.Name }}"
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.environment }}"

spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  replicas: {{ .Values.replicas }}
  strategy:
    type: "{{ .Values.strategy.type }}"
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}"
    spec:
      # Affinity для фронтенда на Node c label application=front
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - frontend
      containers:
        - name: frontend
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          env:
            - name: DEFAULT_HOST
              value: backend
          ports:
            - name: frontend
              containerPort: 8080
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 8080
          #   initialDelaySeconds: 15
          #   periodSeconds: 30
          #   timeoutSeconds: 1
          #   failureThreshold: 6
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf-configmap
            items:
              - key: nginx.conf
                path: nginx.conf 
      imagePullSecrets:
        - name: docker-config-secret
